version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2
  heroku: circleci/heroku@1.0.1 # Use the Heroku orb in your config

jobs:
  build:
    docker:
      - image: cimg/ruby-node:3.0.3
    steps:
      - checkout
      - ruby/install-deps
      # Store bundle cache
      - node/install-packages:
         pkg-manager: yarn
         cache-key: "yarn.lock"
  test:
    parallelism: 3
    docker:
      - image: cimg/ruby-node:3.0.3
      - image: cimg/postgres:14.2
        environment:
          POSTGRES_USER: anity_jobs
          POSTGRES_DB: anity_jobs_test
          POSTGRES_PASSWORD: ""
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: anity_jobs
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
         pkg-manager: yarn
         cache-key: "yarn.lock"
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - ruby/rspec-test
      #- ruby/rubocop-check
      # - run:
      #     name: Run standardrb check
      #     command: bundle exec standardrb --format progress

workflows: # Ref: https://medium.com/@allanmongej/setting-up-ci-cd-to-a-rails-6-api-with-circleci-and-heroku-c00064f31d57
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
  # heroku_deploy:
  #   jobs:
  #     - build
  #     - heroku/deploy-via-git: # Use the pre-configured job, deploy-via-git
  #         requires:
  #           - build # only run deploy-via-git job if the build job has completed
  #         filters:
  #           branches:
  #             only: main # only run deploy-via-git job on main branch